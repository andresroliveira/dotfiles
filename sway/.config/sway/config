# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
# set $term foot
# set $term kitty
set $term ghostty
# Your preferred application launcher
# set $menu wmenu-run
# set $menu 'rofi -show combi -modes combi -combi-modes window,drun,run,ssh'
set $menu 'rofi -show combi -modes combi -combi-modes drun,run'

set $browser google-chrome-stable
set $files dolphin

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output * bg ~/Imagens/1357324.jpeg fill
# output * bg ~/Imagens/wave_wallpaper.jpg fill
# workspace 1 output eDP-1
# workspace 2 output HDMI-A-1
# output HDMI-A-1 pos 0 0 res 1600x900
# output eDP-1 pos 1600 0

output eDP-1 pos 0 0 res 1366x768
output HDMI-A-1 pos 1366 0
workspace 1 output eDP-1
workspace 2 output HDMI-A-1


# output HDMI-A-1 pos 0 0 res 1920x1080
# output eDP-1 pos 1920 0 res 1366x768
# workspace 1 output HDMI-A-1
# workspace 2 output eDP-1

font pango:FiraCode Nerd Font 8

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# exec swayidle -w \
#          timeout 600 'swaylock -f -c 000000' \
#          timeout 900 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'


### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input type:touchpad {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}

input * {
    # xkb_layout "br,us"
    # xkb_options "grp:alt_shift_toggle"
    xkb_layout "us,br"
    xkb_options "grp:shifts_toggle"
    xkb_numlock enabled
}

focus_follows_mouse no

# bindsym $mod+tab workspace next_on_output
# bindsym $mod+Shift+tab workspace prev_on_output

bindsym $mod+tab workspace back_and_forth
bindsym Mod1+tab workspace next_on_output
bindsym Mod1+Shift+tab workspace prev_on_output
# bindsym Mod1+Tab focus back_and_forth

# Allow switching between workspaces with left and right swipes

bindgesture swipe:4:right workspace prev_on_output
bindgesture swipe:4:left workspace next_on_output

# Allow switching focus with three finger swipes

bindgesture swipe:3:right focus left
bindgesture swipe:3:left focus right
bindgesture swipe:3:up focus down
bindgesture swipe:3:down focus up

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill
    bindsym $mod+q kill
    bindsym Mod1+F4 kill

    # Start your launcher
    bindsym $mod+d exec wmenu-run
    bindsym $mod+Space exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    # binsdsym $mod+Shift+c reload
    bindsym $mod+Shift+c reload
    bindsym $mod+Shift+r exec swaymsg reload


    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    bindsym $mod+Control+$left workspace prev_on_output
    bindsym $mod+Control+$right workspace next_on_output
    bindsym $mod+Control+Left workspace prev_on_output
    bindsym $mod+Control+Right workspace next_on_output

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+s splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+t layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+o layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+a focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+Shift+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
#
# Utilities:
#
    # Special keys to adjust volume via PulseAudio
    bindsym --locked XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ toggle
    bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
    bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
    bindsym --locked XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle
    # Media player controls
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioStop exec playerctl stop
    bindsym XF86AudioPause exec playerctl pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous
    # Special keys to adjust brightness via brightnessctl
    bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+
    # Special key to take a screenshot with grim
    # bindsym Print exec grim
    bindsym Print exec slurp | grim -s 2 -g - - | tee "$HOME/Imagens/Screenshots/Screenshot-$(date '+%Y-%m-%d_%H-%M-%S').png" | wl-copy
    bindsym $mod+Shift+s exec slurp | grim -s 2 -g - - | tee "$HOME/Imagens/Screenshots/Screenshot-$(date '+%Y-%m-%d_%H-%M-%S').png" | wl-copy
    bindsym $mod+Print exec grim -s 2 - | tee "$HOME/Imagens/Screenshots/Screenshot-$(date '+%Y-%m-%d_%H-%M-%S').png" | wl-copy
include /etc/sway/config.d/*

#
# Andres
#

# gaps inner 5
# gaps outer 5
# default_border pixel 2
# default_border none
# default_floating_border none
hide_edge_borders both
bindsym $mod+e exec $files
bindsym $mod+b exec $browser

#
# Lockscreen
#

set $Locker swaylock --color 000000

set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id $Locker, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Backspace mode "$mode_system"

#
# Notifications
#

exec --no-startup-id dunst &

# floating pop up automatically
# pop-up windows
for_window [window_role="pop-up"] floating enable
for_window [window_role="About"] floating enable
for_window [window_type="dialog"] floating enable
for_window [window_role="dialog"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [class="Google-chrome" window_role="pop-up"] floating enable



#
# KDE Wallet
#

exec --no-startup-id /usr/lib/pam_kwallet_init
exec --no-startup-id /usr/lib/polkit-kde-authentication-agent-1

#
# Emoji
#

bindsym $mod+m exec rofi -modi emoji -show emoji

#
# Cliphist
#

exec --no-startup-id wl-paste --watch cliphist store
# bindsym $mod+Shift+v exec rofi -modi cliphist:cliphist -show cliphist 
bindsym $mod+Shift+v exec cliphist list | rofi -dmenu | cliphist decode | wl-copy
# bindsym $mod+Shift+v exec cliphist list | rofi -dmenu | cliphist decode | tee >(wl-copy) | wtype


 ### Gruvbox
set $light       #ebdbb2
set $dark        #3c3836
# set $focused     #3c3836
set $focused     #fe8019
set $inactive    #1d2021
set $unfocused   #1d2021
set $urgent      #b8bb26

### Colors (see man 5 sway)
# border - border around titlebar
# bg - titlebar background
# text - text on titlebar
# indicator - shown where new window will open
# child_border - border around the window
# class                 border      bg          text     indicator   child_border
# client.focused          $focused    $focused    $light  $focused    $focused
# client.focused_inactive $inactive   $inactive   $light $inactive   $inactive
# client.unfocused        $unfocused  $unfocused  $light $unfocused  $unfocused
# client.urgent           $urgent     $urgent     $light $urgent     $urgent

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     swaybar_command waybar
# }
bar {
    position bottom

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %X'; do sleep 1; done

    status_command i3status

    colors {
        statusline #ffffff
        # background #323232
        background #000000
        # inactive_workspace #32323200 #32323200 #5c5c5c
        # inactive_workspace $inactive $inactive $light
        # focused_workspace $focused $focused $light
    }
}

# exec waybar


# exec --no-startup-id nm-applet
exec nm-applet --indicator
exec blueman-applet
# exec_always nm-applet --indicator
